/**
 * @description 基于jQuery的select下拉框插件
 * @author Arvin
 * @date 2016年8月11日18:40:56
 * @version 1.0
 */
(function ($) {
    var defautl_options = {};
    $.fn.extend({
        "jSelect": function (options) {
            options = $.extend(defautl_options, options);
            $(this).hide();
            return $(this).each(function () {
                var id = $(this).attr("id");
                var $jSelect = createSelect(id);
                $jSelect.width($(this).width() + 55);
                $(this).after($jSelect);
                $("#" + id + "_current_select .current_select_text").html($(this).find("option:selected").text());
                $(this).find("option").each(function () {
                    $("#" + id + "_select ul").append("<li>" + $(this).text() + "</li>")
                });
                $("#" + id + "_select ul li:eq(0)").addClass("current_item");
                $("#" + id + "_current_select").click(function () {
                    toggle(id)
                });
                initListItemClickEvent(id);
                initCloseEvent(id);
                initKeyEvent(id);
                try {
                    initSelectScrollBar(id)
                } catch (e) {
                    console.log(e)
                }
            });
        },
        "jSelectReset": function () {
            return $(this).each(function () {
                var id = $(this).attr("id");
                var first = $("#" + id + " option:first").attr("selected", "selected");
                $("#" + id + "_current_select .current_select_text").html(first.html());
                first.siblings().removeAttr("selected");
            });
        }
    });
    function toggle(id) {
        $("#" + id + "_select ul").is($(":hidden")) ? showSelect(id) : hideSelect(id)
    }

    function showSelect(id) {
        $("#" + id + "_select ul").show().scrollTop(0)
    }

    function hideSelect(id) {
        var i = $("#" + id).find("option:selected").index() || 0;
        $("#" + id + "_select ul").find("li:eq("+ i +")") .addClass("current_item").siblings().removeClass("current_item");
        $("#" + id + "_select ul").hide();
        index = 0
    }

    function initListItemClickEvent(id) {
        $("#" + id + "_select ul li").click(function () {
            $("#" + id).find("option").eq($(this).index()).attr("selected", "selected").siblings("option").removeAttr("selected");
            $("#" + id + "_current_select .current_select_text").html($(this).html());
            hideSelect(id);
            $("#" + id).change();
            $(this).addClass("current_item").siblings().removeClass("current_item");
        })
    }

    function initCloseEvent(id) {
        $(document).click(function (e) {
            var $target = $(e.target || e.srcElement);
            if (!$target.is($("#" + id + "_select ul,#" + id + "_current_select")) && !$target.is($("#" + id + "_current_select").find("*"))) {
                hideSelect(id)
            }
        });
        $("#" + id + "_current_select").blur(function () {
            setTimeout(function () {
                hideSelect(id)
            }, 200)
        })
    }

    function initSelectScrollBar(id) {
        $("#" + id + "_select ul").niceScroll({
            styler: "fb",
            cursorcolor: "#999",
            cursorwidth: '6',
            cursorborderradius: '10px',
            background: 'transparent',
            spacebarenabled: false,
            cursorborder: '0',
            zindex: '1000'
        })
    }

    var index = 0;

    function initKeyEvent(id) {
        $("#" + id + "_select").keydown(function (event) {
            switch (event.keyCode) {
                case 13:
                case 32:
                    $("#" + id).find("option").eq($(this).find("ul li.current_item").index()).attr("selected", "selected").siblings("option").removeAttr("selected");
                    $("#" + id + "_current_select .current_select_text").html($(this).find("ul li.current_item").html());
                    hideSelect(id);
                    $("#" + id).change();
                    break;
                case 27:
                    hideSelect(id);
                    break;
                case 38:
                    index--;
                    if (index < 0) {
                        index = 0
                    }
                    if (index < $(this).find("ul li").length - 10) {
                        $(this).find("ul").scrollTop($(this).find("ul").scrollTop() - 30)
                    }
                    break;
                case 40:
                    if ($(this).find("ul").is($(":hidden"))) {
                        showSelect(id)
                    } else {
                        index++;
                        if (index >= $(this).find("ul li").length) {
                            index = $(this).find("ul li").length - 1
                        }
                    }
                    if (index > 9) {
                        $(this).find("ul").scrollTop($(this).find("ul").scrollTop() + 30)
                    }
                    break
            }
            console.log("index:" + index);
            $(this).find("ul li").eq(index).addClass("current_item").siblings().removeClass("current_item")
        })
    }

    function createSelect(srcId) {
        var selectHtml = "<div id=\"" + srcId + "_select\" class='j_select'><div id=\"" + srcId + "_current_select\" class=\"current_select\" tabindex=\"0\"><span class=\"current_select_text " + srcId + "_current_select_text\"></span><span class=\"select_icon " + srcId + "_select_icon\"></span></div><ul tabindex=\"1\"></ul></div>";
        return $(selectHtml)
    }
})(jQuery);